main() 함수의 표준 return 타입은 int형, void 형으로 선언할 수 있지만, 표준이 아님.
return 문 생략이 가능하다. main함수 종료시 자동으로 return 0; 이 실행됨

return 값은 아무 값이나 상관 없음. 부모-자식 프로그램 관계에서 자식 프로그램의 종료상태를 체크하기 위한 용도.
위 관계가 아닐 때, 부모프로그램의 역할을 운영체제가 하는데, 운영체제는 특별한 상태값이 없어 어떤 값을 return 해도 상관 없음.

#include -> 전처리기를 호출하여 헤더파일의 내용을 소스코드 안에 집어넣은 후 컴파일한다.

cout : 스크린 장치와 연결된 c++ 표준 출력 스트림 '객체' 이다.
<< 연산자로, 피연산자를 스트림 객체에 삽입한다.

* true는 정수 1로 출력, false는 정수 0으로 출력한다.
* '\n' 은 이 문자를 << 연산자가 스트림 버퍼 객체에 삽입하고 끝난다. 이후 스트림 버퍼가 다 차거나, 출력지시가 있을 때, '\n' 을 해석하여 줄넘김을 실행한다.
* endl() 은 iostream에 작성된 함수로, 해당 함수를 호출하여 '\n'을 스트림 버퍼에 넣고, 즉각적으로 현재 버퍼의 모든 데이터를 출력하도록 지시한다.

namespace -> 프로젝트를 여러명이 개발하거나, 다른 사람의 소스코드나 목적파일을 불러와 쓰는 경우, 이름이 충돌할 수 있다.
이 경우, 충돌하는 이름을 구분하기 위해 이름공간을 사용한다.
이름공간의 생성은
namespace {
    이름 작성
}
이름공간의 사용은
이름공간::이름 의 형태로 사용한다. ( ::는 범위지정 연산자로, c++ 표준 연산자임

using 키워드로 이름공간 접두어를 생략할 수 있다.
using std::cout // cout에 대해 std 선언 생략
using namespace std; // std 전체 생략

c++ 모든 표준 라이브러리는 std 이름공간에 구현되어있다.

cin : 키보드와 연결된 c++ 표준 입력 스트림 '객체'
>> 연산자로, 왼쪽 피연산자인 스트림 객체로부터 데이터를 읽어 우측 피연산자인 변수에 값을 삽입한다.
입력시 사용자가 입력한 값은 일시적으로 cin 스트림 버퍼에 저장되고, 엔터를 치면 버퍼로부터 값을 가져와 변수에 넣는다.
Backspace키로 버퍼에 담긴 키를 제거할 수 있다.
cin은 공백을 만나면 공백이전까지의 내용을 하나의 문자열로 인식하고 변수에 당으며, 공백 이후 문자열은 다음 >> 연산자에서 처리하도록 버퍼에 남겨둔다.
